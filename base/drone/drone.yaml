apiVersion: v1
kind: Service
metadata:
  name: drone
spec:
  selector:
    app: drone
  ports:
    - protocol: TCP
      name: http
      port: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: drone-env
data:
  DRONE_GITEA_SERVER: https://git.rappet.xyz
  DRONE_GIT_ALWAYS_AUTH: "true"
  DRONE_SERVER_HOST: drone.rappet.xyz
  DRONE_SERVER_PROTO: https
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drone-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone
spec:
  selector:
    matchLabels:
      app: drone
  template:
    metadata:
      labels:
        app: drone
    spec:
      containers:
        - name: drone
          image: drone/drone:1
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /var/lib/drone
              name: data
          env:
            - name: DRONE_GITEA_SERVER
              valueFrom:
                configMapKeyRef:
                  name: drone-env
                  key: DRONE_GITEA_SERVER
            - name: DRONE_GIT_ALWAYS_AUTH
              valueFrom:
                configMapKeyRef:
                  name: drone-env
                  key: DRONE_GIT_ALWAYS_AUTH
            - name: DRONE_GITEA_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: drone-secret
                  key: DRONE_GITEA_CLIENT_ID
            - name: DRONE_GITEA_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: drone-secret
                  key: DRONE_GITEA_CLIENT_SECRET
            - name: DRONE_RPC_SECRET
              valueFrom:
                secretKeyRef:
                  name: drone-secret
                  key: DRONE_RPC_SECRET
            - name: DRONE_SERVER_HOST
              valueFrom:
                configMapKeyRef:
                  name: drone-env
                  key: DRONE_SERVER_HOST
            - name: DRONE_SERVER_PROTO
              valueFrom:
                configMapKeyRef:
                  name: drone-env
                  key: DRONE_SERVER_PROTO
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: drone-data
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: drone-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: drone.rappet.xyz
      http:
        paths:
          - backend:
              serviceName: drone
              servicePort: 80
  tls:
    - hosts:
        - drone.rappet.xyz
      secretName: drone-ingress-cert
